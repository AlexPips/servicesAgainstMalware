import radix
import requests
from shodan import Shodan
from xml.dom import minidom


rtree = radix.Radix()  # This data structure will store the AWS IP prefixes
r = requests.get("https://ip-ranges.amazonaws.com/ip-ranges.json").json()
print(r)
for p in r["prefixes"]:
    if p["service"] == "EC2": 
        rtree.add(p["ip_prefix"])


SHODAN_API_KEY = ''
api = Shodan(SHODAN_API_KEY)

results = api.search('apache')
print('Results found: {}'.format(results['total']))

mydoc = minidom.parse('official-cpe-dictionary_v2.3.xml')
items = mydoc.getElementsByTagName('cpe-item')
#total amount of items
print(len(items))

dom = parseString('official-cpe-dictionary_v2.3.xml')
for s in mydoc.getElementsByTagName('cpe-item'):
    if s.getAttribute('name') == 'cpe:/a:10-strike:network_monitor:1.1':
        print(s.childNodes[0].data)

    #cpeData = mydoc.getElementsByName("cpe:/a:10-strike:network_monitor:1.1")
        #"cpe:/a:10-strike:network_monitor:1.0"


# For every IP in the Shodan results check if it's whithin the AWS IP prefixes
for result in results['matches']:
    ip = result['ip_str']
    if rtree.search_best(ip):                
        print('IP: {}'.format(result['ip_str']))
        print(result['data'])
        try:
            print('Port: {}'.format(result['cpe']))
        except:
            print(" ")
        
        print("______________________________________")
